// Copyright 2022 MPCVault (MetaLoop INC)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: mpcvault/cloudmpc/v1/cloudmpc.proto

package cloudmpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyType int32

const (
	KeyType_KEY_TYPE_UNSPECIFIED    KeyType = 0
	KeyType_KEY_TYPE_ECC_SECP256K1  KeyType = 1
	KeyType_KEY_TYPE_ECC_CURVE25519 KeyType = 2
)

// Enum value maps for KeyType.
var (
	KeyType_name = map[int32]string{
		0: "KEY_TYPE_UNSPECIFIED",
		1: "KEY_TYPE_ECC_SECP256K1",
		2: "KEY_TYPE_ECC_CURVE25519",
	}
	KeyType_value = map[string]int32{
		"KEY_TYPE_UNSPECIFIED":    0,
		"KEY_TYPE_ECC_SECP256K1":  1,
		"KEY_TYPE_ECC_CURVE25519": 2,
	}
)

func (x KeyType) Enum() *KeyType {
	p := new(KeyType)
	*p = x
	return p
}

func (x KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_enumTypes[0].Descriptor()
}

func (KeyType) Type() protoreflect.EnumType {
	return &file_mpcvault_cloudmpc_v1_cloudmpc_proto_enumTypes[0]
}

func (x KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyType.Descriptor instead.
func (KeyType) EnumDescriptor() ([]byte, []int) {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescGZIP(), []int{0}
}

type SigningAlgo int32

const (
	SigningAlgo_SIGNING_ALGO_UNSPECIFIED SigningAlgo = 0
	SigningAlgo_SIGNING_ALGO_ECDSA       SigningAlgo = 1
	SigningAlgo_SIGNING_ALGO_EDDSA       SigningAlgo = 2
)

// Enum value maps for SigningAlgo.
var (
	SigningAlgo_name = map[int32]string{
		0: "SIGNING_ALGO_UNSPECIFIED",
		1: "SIGNING_ALGO_ECDSA",
		2: "SIGNING_ALGO_EDDSA",
	}
	SigningAlgo_value = map[string]int32{
		"SIGNING_ALGO_UNSPECIFIED": 0,
		"SIGNING_ALGO_ECDSA":       1,
		"SIGNING_ALGO_EDDSA":       2,
	}
)

func (x SigningAlgo) Enum() *SigningAlgo {
	p := new(SigningAlgo)
	*p = x
	return p
}

func (x SigningAlgo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SigningAlgo) Descriptor() protoreflect.EnumDescriptor {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_enumTypes[1].Descriptor()
}

func (SigningAlgo) Type() protoreflect.EnumType {
	return &file_mpcvault_cloudmpc_v1_cloudmpc_proto_enumTypes[1]
}

func (x SigningAlgo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SigningAlgo.Descriptor instead.
func (SigningAlgo) EnumDescriptor() ([]byte, []int) {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescGZIP(), []int{1}
}

type CreateKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyType KeyType `protobuf:"varint,1,opt,name=key_type,json=keyType,proto3,enum=mpcvault.cloudmpc.v1.KeyType" json:"key_type,omitempty"`
}

func (x *CreateKeyRequest) Reset() {
	*x = CreateKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyRequest) ProtoMessage() {}

func (x *CreateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateKeyRequest) Descriptor() ([]byte, []int) {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateKeyRequest) GetKeyType() KeyType {
	if x != nil {
		return x.KeyType
	}
	return KeyType_KEY_TYPE_UNSPECIFIED
}

type CreateKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	X     string `protobuf:"bytes,2,opt,name=x,proto3" json:"x,omitempty"` // X component of an EC public key
	Y     string `protobuf:"bytes,3,opt,name=y,proto3" json:"y,omitempty"` // Y component of an EC public key
}

func (x *CreateKeyResponse) Reset() {
	*x = CreateKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyResponse) ProtoMessage() {}

func (x *CreateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateKeyResponse) Descriptor() ([]byte, []int) {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateKeyResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *CreateKeyResponse) GetX() string {
	if x != nil {
		return x.X
	}
	return ""
}

func (x *CreateKeyResponse) GetY() string {
	if x != nil {
		return x.Y
	}
	return ""
}

type DescribeKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *DescribeKeyRequest) Reset() {
	*x = DescribeKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeKeyRequest) ProtoMessage() {}

func (x *DescribeKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeKeyRequest.ProtoReflect.Descriptor instead.
func (*DescribeKeyRequest) Descriptor() ([]byte, []int) {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type DescribeKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	X     string `protobuf:"bytes,2,opt,name=x,proto3" json:"x,omitempty"` // X component of an EC public key
	Y     string `protobuf:"bytes,3,opt,name=y,proto3" json:"y,omitempty"` // Y component of an EC public key
}

func (x *DescribeKeyResponse) Reset() {
	*x = DescribeKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeKeyResponse) ProtoMessage() {}

func (x *DescribeKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeKeyResponse.ProtoReflect.Descriptor instead.
func (*DescribeKeyResponse) Descriptor() ([]byte, []int) {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeKeyResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *DescribeKeyResponse) GetX() string {
	if x != nil {
		return x.X
	}
	return ""
}

func (x *DescribeKeyResponse) GetY() string {
	if x != nil {
		return x.Y
	}
	return ""
}

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId       string      `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	SigningAlgo SigningAlgo `protobuf:"varint,2,opt,name=signing_algo,json=signingAlgo,proto3,enum=mpcvault.cloudmpc.v1.SigningAlgo" json:"signing_algo,omitempty"`
	Message     []byte      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescGZIP(), []int{4}
}

func (x *SignRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SignRequest) GetSigningAlgo() SigningAlgo {
	if x != nil {
		return x.SigningAlgo
	}
	return SigningAlgo_SIGNING_ALGO_UNSPECIFIED
}

func (x *SignRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type SignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R        string `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`                               // r value for ECDSA
	S        string `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`                               // s value for ECDSA
	V        string `protobuf:"bytes,3,opt,name=v,proto3" json:"v,omitempty"`                               // v value for ECDSA (recoverable signature)
	EddsaSig string `protobuf:"bytes,4,opt,name=eddsa_sig,json=eddsaSig,proto3" json:"eddsa_sig,omitempty"` // EdDSA signature {R, s}
}

func (x *SignResponse) Reset() {
	*x = SignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResponse) ProtoMessage() {}

func (x *SignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResponse.ProtoReflect.Descriptor instead.
func (*SignResponse) Descriptor() ([]byte, []int) {
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescGZIP(), []int{5}
}

func (x *SignResponse) GetR() string {
	if x != nil {
		return x.R
	}
	return ""
}

func (x *SignResponse) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *SignResponse) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

func (x *SignResponse) GetEddsaSig() string {
	if x != nil {
		return x.EddsaSig
	}
	return ""
}

var File_mpcvault_cloudmpc_v1_cloudmpc_proto protoreflect.FileDescriptor

var file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x22, 0x4c, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x79, 0x22, 0x2b, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x48,
	0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x79, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x6f, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x41, 0x6c, 0x67, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x55, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a,
	0x01, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x76,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x64, 0x64,
	0x73, 0x61, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x64,
	0x64, 0x73, 0x61, 0x53, 0x69, 0x67, 0x2a, 0x5c, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x14, 0x4b, 0x45, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4b,
	0x45, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x53, 0x45, 0x43, 0x50,
	0x32, 0x35, 0x36, 0x4b, 0x31, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4b, 0x45, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x55, 0x52, 0x56, 0x45, 0x32, 0x35, 0x35,
	0x31, 0x39, 0x10, 0x02, 0x2a, 0x5b, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41,
	0x6c, 0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41,
	0x4c, 0x47, 0x4f, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47,
	0x4f, 0x5f, 0x45, 0x43, 0x44, 0x53, 0x41, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x49, 0x47,
	0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x5f, 0x45, 0x44, 0x44, 0x53, 0x41, 0x10,
	0x02, 0x32, 0xa8, 0x02, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x50, 0x43, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x26, 0x2e, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x70, 0x63,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x2e, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x04, 0x53,
	0x69, 0x67, 0x6e, 0x12, 0x21, 0x2e, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x67, 0x0a, 0x18,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x6d, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d,
	0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x6f, 0x2e, 0x6d, 0x70,
	0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x70, 0x63, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x6d, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescOnce sync.Once
	file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescData = file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDesc
)

func file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescGZIP() []byte {
	file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescOnce.Do(func() {
		file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescData)
	})
	return file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDescData
}

var file_mpcvault_cloudmpc_v1_cloudmpc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mpcvault_cloudmpc_v1_cloudmpc_proto_goTypes = []interface{}{
	(KeyType)(0),                // 0: mpcvault.cloudmpc.v1.KeyType
	(SigningAlgo)(0),            // 1: mpcvault.cloudmpc.v1.SigningAlgo
	(*CreateKeyRequest)(nil),    // 2: mpcvault.cloudmpc.v1.CreateKeyRequest
	(*CreateKeyResponse)(nil),   // 3: mpcvault.cloudmpc.v1.CreateKeyResponse
	(*DescribeKeyRequest)(nil),  // 4: mpcvault.cloudmpc.v1.DescribeKeyRequest
	(*DescribeKeyResponse)(nil), // 5: mpcvault.cloudmpc.v1.DescribeKeyResponse
	(*SignRequest)(nil),         // 6: mpcvault.cloudmpc.v1.SignRequest
	(*SignResponse)(nil),        // 7: mpcvault.cloudmpc.v1.SignResponse
}
var file_mpcvault_cloudmpc_v1_cloudmpc_proto_depIdxs = []int32{
	0, // 0: mpcvault.cloudmpc.v1.CreateKeyRequest.key_type:type_name -> mpcvault.cloudmpc.v1.KeyType
	1, // 1: mpcvault.cloudmpc.v1.SignRequest.signing_algo:type_name -> mpcvault.cloudmpc.v1.SigningAlgo
	2, // 2: mpcvault.cloudmpc.v1.CloudMPCService.CreateKey:input_type -> mpcvault.cloudmpc.v1.CreateKeyRequest
	4, // 3: mpcvault.cloudmpc.v1.CloudMPCService.DescribeKey:input_type -> mpcvault.cloudmpc.v1.DescribeKeyRequest
	6, // 4: mpcvault.cloudmpc.v1.CloudMPCService.Sign:input_type -> mpcvault.cloudmpc.v1.SignRequest
	3, // 5: mpcvault.cloudmpc.v1.CloudMPCService.CreateKey:output_type -> mpcvault.cloudmpc.v1.CreateKeyResponse
	5, // 6: mpcvault.cloudmpc.v1.CloudMPCService.DescribeKey:output_type -> mpcvault.cloudmpc.v1.DescribeKeyResponse
	7, // 7: mpcvault.cloudmpc.v1.CloudMPCService.Sign:output_type -> mpcvault.cloudmpc.v1.SignResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mpcvault_cloudmpc_v1_cloudmpc_proto_init() }
func file_mpcvault_cloudmpc_v1_cloudmpc_proto_init() {
	if File_mpcvault_cloudmpc_v1_cloudmpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mpcvault_cloudmpc_v1_cloudmpc_proto_goTypes,
		DependencyIndexes: file_mpcvault_cloudmpc_v1_cloudmpc_proto_depIdxs,
		EnumInfos:         file_mpcvault_cloudmpc_v1_cloudmpc_proto_enumTypes,
		MessageInfos:      file_mpcvault_cloudmpc_v1_cloudmpc_proto_msgTypes,
	}.Build()
	File_mpcvault_cloudmpc_v1_cloudmpc_proto = out.File
	file_mpcvault_cloudmpc_v1_cloudmpc_proto_rawDesc = nil
	file_mpcvault_cloudmpc_v1_cloudmpc_proto_goTypes = nil
	file_mpcvault_cloudmpc_v1_cloudmpc_proto_depIdxs = nil
}
